#!/usr/bin/python
from poetry import molgen
import os
import string
import math
import re
import random
lx = 30.0
ly = 30.0
lz = 30.0

# ----------- start 读取配置文件, 生成 output folder -----------
import argparse
import json
from pathlib import Path

# Create the parser
parser = argparse.ArgumentParser(description='Read a config file.')
parser.add_argument('--config', type=str, help='Path to the config file')
args = parser.parse_args()
if not args.config:
    print("ERROR: config file is not provided!")
    exit()

with open("config.json") as f:
    config = json.load(f)
### 待传入参数：数目
N0 = config['N0']  # N0=100 #mol0:异氰酸酯预聚体 NCO值=12.8  E(BA28B)3E 
N1 = config['N1']  # N1=5 #mol1:PTMG1000
N2 = config['N2']  # N2=0 #mol2:PTMG2000
N3 = config['N3']  # N3=10 #mol3:330N
N4 = config['N4']  # N4=0 #mol4:BDO
N5 = config['N5']  # N5=0 #mol5:水

job_id = str(config['job_id'])
output_dir = Path.cwd()/job_id
output_dir.mkdir(parents=True, exist_ok=True)

import sys
# Remove '--config' and its value, to avoid conflict with poetry
if '--config' in sys.argv:
    index = sys.argv.index('--config')
    sys.argv.pop(index)  # Removes '--config'
    sys.argv.pop(index)  # Removes '123.json'

print(f"N0: {N0}, N1: {N1}, N2: {N2}, N3: {N3}, N4: {N4}, N5: {N5}, output_dir: {output_dir}")    
# ----------- end  -----------

from poetry import molgen

#######################################################################
#          mol1:PTMG1000
#######################################################################
mol1_particalnum=14
#PsetParticleTypes  FG12F
mol1_particaltypes = "F,"+12*"G,"+"F"

#setTopology 0-1,...,12-13
mol1_topology_str = ",".join([f"{i}-{i+1}" for i in range(mol1_particalnum-1)])
#######################################################################
#          mol2:PTMG2000
#######################################################################
mol2_particalnum=28
#PsetParticleTypes  LM26L
mol2_particaltypes = "L,"+26*"M,"+"L"

#setTopology 0-1,...,26-27
mol2_topology_str = ",".join([f"{i}-{i+1}" for i in range(mol2_particalnum-1)])

#######################################################################
#          mol3:330N
#######################################################################
mol3_particalnum=82
#setParticleTypes I(J26K01) (J26K02) (J26K03)
mol3_particaltypes= "I,"+26*"J,"+"K01,"+26*"J,"+"K02,"+26*"J,"+"K03"

#setTopology 0-1,...,26-27,0-28,...,53-54,0-55,...,80-81
mol3_topology_str = ",".join([f"{i}-{i+1}" for i in range(mol3_particalnum-1)])
# 替换"27-28"为"0-28"
mol3_topology_str = mol3_topology_str.replace("27-28,", "0-28,")
mol3_topology_str = mol3_topology_str.replace("54-55,", "0-55,")

#######################################################################
#          mol4:BDO 
#######################################################################
mol4_particalnum=2
mol4_topology_str="0-1"
mol4_particaltypes="C, C"

#######################################################################
#          mol5:水
#######################################################################
mol5_particalnum=2
mol5_topology_str="0-1"
mol5_particaltypes="O, H"

#######################################################################
#          mol0:异氰酸酯预聚体 NCO值=12.8  E(BA28B)3E 
#######################################################################
mol0_particalnum=92
#PsetParticleTypes  E(BA28B)3E
mol0_particaltypes = "E,"+("B,"+28*"A,"+"B,")*3+"E"

#setTopology 0-1,...,90-91
mol0_start = 0
mol0_end = mol0_particalnum-1
mol0_topology_str=""

mol0_topology_str = ",".join([f"{i}-{i+1}" for i in range(mol0_particalnum-1)])


#PTMG1000
mol1=molgen.Molecule(mol1_particalnum) 
mol1.setTopology(mol1_topology_str) 
mol1.setParticleTypes(mol1_particaltypes) 
mol1.setBondLength(1.0)
mol1.setInit(0)
mol1.setCris(0)

#PTMG2000
mol2=molgen.Molecule(mol2_particalnum) 
mol2.setTopology(mol2_topology_str) 
mol2.setParticleTypes(mol2_particaltypes) 
mol2.setBondLength(1.0)
mol2.setInit(0)
mol2.setCris(0)


#330N
mol3=molgen.Molecule(mol3_particalnum) 
mol3.setTopology(mol3_topology_str) 
mol3.setParticleTypes(mol3_particaltypes) 
mol3.setBondLength(1.0)
mol3.setInit(0)
mol3.setCris(0)

#BDO
mol4=molgen.Molecule(mol4_particalnum)
mol4.setTopology(mol4_topology_str)
mol4.setParticleTypes(mol4_particaltypes)
mol4.setBondLength(1.0)
mol4.setInit(0)
mol4.setCris(0)

#水
mol5=molgen.Molecule(mol5_particalnum)
mol5.setTopology(mol5_topology_str)
mol5.setParticleTypes(mol5_particaltypes)
mol5.setBondLength(1.0)
mol5.setInit(0)
mol5.setCris(0)


#异氰酸酯预聚体 NCO值=12.8  E(BA28B)3E
mol0=molgen.Molecule(mol0_particalnum)
mol0.setTopology(mol0_topology_str)
mol0.setParticleTypes(mol0_particaltypes)
mol0.setBondLength(1.0)
mol0.setInit(1)
mol0.setCris(0)


#######################################################################
#          生成器
#######################################################################
gen0=molgen.Generators(lx,ly,lz)
gen0.addMolecule(mol0,N0)
gen0.addMolecule(mol1,N1) 
gen0.addMolecule(mol2,N2)
gen0.addMolecule(mol3,N3)
gen0.addMolecule(mol4,N4)
gen0.addMolecule(mol5,N5)

filename="NCO_"+ str(N0) +"_PTMG1000_"+str(N1)+"_PTMG2000_"+str(N2)+"_330N_"+str(N3)+"_BDO_"+str(N4)+"_H2O_"+str(N5)
filename = output_dir.joinpath(filename).as_posix()
gen0.setDimension(3)
gen0.setMinimumDistance(0.9)
gen0.outPutXML(filename)
